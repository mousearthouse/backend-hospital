[33mcommit d04d2bd084f2e4e949154e063d0ae999eed36ff3[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m)[m
Author: Polina Adashkevich <polinatulenka@gmail.com>
Date:   Fri Nov 8 17:17:36 2024 +0300

    ü¶ï the last commit before the last-last commit
    fixed some filtrations

[1mdiff --git a/Controllers/InspectionController.cs b/Controllers/InspectionController.cs[m
[1mindex 2ce86af..8d26a4e 100644[m
[1m--- a/Controllers/InspectionController.cs[m
[1m+++ b/Controllers/InspectionController.cs[m
[36m@@ -2,6 +2,7 @@[m
 using backend_email.Data;[m
 using Microsoft.AspNetCore.Mvc;[m
 using Microsoft.EntityFrameworkCore;[m
[32m+[m[32musing System.Security.Claims;[m
 [m
 namespace backend_email.Controllers;[m
 [m
[36m@@ -28,7 +29,7 @@[m [mpublic class InspectionController : ControllerBase[m
         return Ok(inspection);[m
     }[m
 [m
[31m-    // —É–≤—ã, –Ω–∞–¥–æ —ç—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å[m
[32m+[m
     [HttpPut("{id}")][m
     public async Task<IActionResult> UpdateInspection(Guid id, [FromBody] InspectionEdit inspectionEdit)[m
     {[m
[36m@@ -38,6 +39,11 @@[m [mpublic class InspectionController : ControllerBase[m
         {[m
             return NotFound();[m
         }[m
[32m+[m[32m        var inspectionAuthorId = Guid.Parse(User.FindFirst(ClaimTypes.Name)?.Value);[m
[32m+[m[32m        if (inspection.DoctorId != inspectionAuthorId)[m
[32m+[m[32m        {[m
[32m+[m[32m            return BadRequest("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–≤—Ç–æ—Ä–æ–º —ç—Ç–æ–≥–æ –æ—Å–º–æ—Ç—Ä–∞");[m
[32m+[m[32m        }[m
 [m
         inspection.Anamnesis = inspectionEdit.Anamnesis;[m
         inspection.Complaints = inspectionEdit.Complaints;[m
[1mdiff --git a/Controllers/PatientController.cs b/Controllers/PatientController.cs[m
[1mindex dd09a4a..bcc6391 100644[m
[1m--- a/Controllers/PatientController.cs[m
[1m+++ b/Controllers/PatientController.cs[m
[36m@@ -7,6 +7,7 @@[m [musing Microsoft.AspNetCore.Authorization;[m
 using System.Security.Claims;[m
 using System.Xml.Linq;[m
 using backend_email.Data.SmtpServices;[m
[32m+[m[32musing Org.BouncyCastle.Asn1.Ocsp;[m
 [m
 namespace backend_email.Controllers;[m
 [m
[36m@@ -19,17 +20,22 @@[m [mpublic class PatientController(AppDbContext context) : ControllerBase[m
 [m
     [HttpPost][m
     [Authorize][m
[31m-    public async Task<IActionResult> CreatePatient([FromBody] Patient patient)[m
[32m+[m[32m    public async Task<IActionResult> CreatePatient([FromBody] CreatePatient patient)[m
     {[m
         if (!ModelState.IsValid)[m
         {[m
             return BadRequest(ModelState);[m
         }[m
[31m-[m
[31m-        _context.Patients.Add(patient);[m
[32m+[m[32m        var newPatient = new Patient[m
[32m+[m[32m        {[m
[32m+[m[32m            Name = patient.Name,[m
[32m+[m[32m            Birthday = patient.Birthday,[m
[32m+[m[32m            Gender = patient.Gender[m
[32m+[m[32m        };[m
[32m+[m[32m        _context.Patients.Add(newPatient);[m
         await _context.SaveChangesAsync();[m
 [m
[31m-        return CreatedAtAction(nameof(CreatePatient), new { id = patient.Id }, patient);[m
[32m+[m[32m        return Ok(newPatient);[m
     }[m
 [m
 [m
[36m@@ -57,19 +63,27 @@[m [mpublic class PatientController(AppDbContext context) : ControllerBase[m
     [HttpGet][m
     [Authorize][m
     public async Task<IActionResult> GetPatients([m
[31m-    int page = 1,[m
[31m-    int size = 10,[m
[31m-    PatientSorting sortBy = PatientSorting.NameAsc[m
[31m-    )[m
[32m+[m[32m        string? request = "",[m
[32m+[m[32m        int page = 1,[m
[32m+[m[32m        int size = 10,[m
[32m+[m[32m        PatientSorting sortBy = PatientSorting.NameAsc)[m
     {[m
         var query = _context.Patients.AsQueryable();[m
 [m
[32m+[m[32m        if (!string.IsNullOrEmpty(request))[m
[32m+[m[32m        {[m
[32m+[m[32m            query = query.Where(patient =>[m
[32m+[m[32m                EF.Functions.ILike(patient.Name, $"%{request}%"));[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m
         query = sortBy switch[m
         {[m
             PatientSorting.NameAsc => query.OrderBy(p => p.Name),[m
             PatientSorting.NameDesc => query.OrderByDescending(p => p.Name),[m
             PatientSorting.CreateAsc => query.OrderBy(p => p.CreateTime),[m
             PatientSorting.CreateDesc => query.OrderByDescending(p => p.CreateTime),[m
[32m+[m[32m            PatientSorting.InspectionAsc => query.OrderBy(p => p.CreateTime),[m
             // —Ç—É—Ç –Ω–∞–¥–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å PatientSorting.InspectionAsc :([m
             _ => query.OrderBy(p => p.Name)[m
         };[m
[36m@@ -113,7 +127,7 @@[m [mpublic class PatientController(AppDbContext context) : ControllerBase[m
         .OrderByDescending(i => i.CreateTime)[m
         .FirstOrDefaultAsync();[m
 [m
[31m-        if (lastInspection != null && createdInspection.Date < lastInspection.CreateTime)[m
[32m+[m[32m        if (lastInspection != null && createdInspection.Date < lastInspection.Date)[m
         {[m
             return BadRequest("–ù–æ–≤—ã–π –æ—Å–º–æ—Ç—Ä –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–¥–µ–ª–∞–Ω —Ä–∞–Ω–µ–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ—Å–º–æ—Ç—Ä–∞");[m
         }[m
[36m@@ -148,7 +162,7 @@[m [mpublic class PatientController(AppDbContext context) : ControllerBase[m
         var specialities = createdInspection.Consultations.Select(c => c.SpecialityId).ToList();[m
         if (specialities.Count != specialities.Distinct().Count())[m
         {[m
[31m-            return BadRequest("–û—Å–º–æ—Ç—Ä –Ω–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π —Å –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å—é.");[m
[32m+[m[32m            return BadRequest("–û—Å–º–æ—Ç—Ä –Ω–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π —Å –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å—é");[m
         }[m
 [m
 [m
[1mdiff --git a/Data/DTO/CommentCreate.cs b/Data/DTO/CommentCreate.cs[m
[1mindex b6d3464..308b8bc 100644[m
[1m--- a/Data/DTO/CommentCreate.cs[m
[1m+++ b/Data/DTO/CommentCreate.cs[m
[36m@@ -1,4 +1,5 @@[m
 Ôªøusing System.ComponentModel.DataAnnotations;[m
[32m+[m[32musing System.ComponentModel.DataAnnotations.Schema;[m
 [m
 namespace backend_email.Data;[m
 [m
[36m@@ -8,5 +9,6 @@[m [mpublic class CommentCreate[m
     [MinLength(1)][m
     [Required][m
     public string Content { get; set; }[m
[32m+[m[32m    [ForeignKey("Consultation")][m
     public Guid ParentId { get; set; }[m
 }[m
[1mdiff --git a/Data/DTO/PatientCreate.cs b/Data/DTO/PatientCreate.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..bdad6cd[m
[1m--- /dev/null[m
[1m+++ b/Data/DTO/PatientCreate.cs[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32musing System.ComponentModel.DataAnnotations;[m
[32m+[m
[32m+[m[32mnamespace backend_email.Data.DTO;[m
[32m+[m
[32m+[m[32mpublic class CreatePatient[m
[32m+[m[32m{[m
[32m+[m[32m    [Required][m
[32m+[m[32m    [MinLength(1)][m
[32m+[m[32m    [MaxLength(1000)][m
[32m+[m[32m    public required string Name { get; set; }[m
[32m+[m[32m    public DateTime? Birthday { get; set; }[m
[32m+[m[32m    [Required][m
[32m+[m[32m    public Gender Gender { get; set; }[m
[32m+[m[32m}[m
[1mdiff --git a/Data/Models/Consultation.cs b/Data/Models/Consultation.cs[m
[1mindex d324c4b..d91c7b0 100644[m
[1m--- a/Data/Models/Consultation.cs[m
[1m+++ b/Data/Models/Consultation.cs[m
[36m@@ -11,5 +11,5 @@[m [mpublic class Consultation[m
     public DateTime CreateTime { get; set; } = DateTime.UtcNow;[m
     public string? InspectionId { get; set; }[m
     public Speciality? Speciality { get; set; }[m
[31m-    public List<Comment>? Comments { get; set; }[m
[32m+[m[32m    public List<Comment>? Comments { get; set; } = [];[m
 }[m
[1mdiff --git a/Data/Models/Icd10Record.cs b/Data/Models/Icd10Record.cs[m
[1mindex ac8ed4a..5233c9d 100644[m
[1m--- a/Data/Models/Icd10Record.cs[m
[1m+++ b/Data/Models/Icd10Record.cs[m
[36m@@ -7,7 +7,7 @@[m [mpublic cla